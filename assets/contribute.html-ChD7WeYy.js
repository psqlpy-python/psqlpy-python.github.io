import{_ as s}from"./plugin-vue_export-helper-DlAUqK2U.js";import{r as o,o as i,c as r,b as e,d as t,a,e as l}from"./app-DiehCitm.js";const c={},d=e("p",null,"We love contributions. This guide is for all fellas who want to make psqlpy better together.",-1),p=e("p",null,"There are several rules for contributors:",-1),u=e("ul",null,[e("li",null,"Please do not add malware."),e("li",null,"Please make sure that your request solves the problem.")],-1),h={href:"https://github.com/qaspen-python/psqlpy/discussions",target:"_blank",rel:"noopener noreferrer"},m=e("p",null,"We have lots of tests in CI. But since CI runs from first-time contributors should be approved, you better test locally. It just takes less time to prepare PR for merging.",-1),g=e("h2",{id:"setting-up-environment",tabindex:"-1"},[e("a",{class:"header-anchor",href:"#setting-up-environment"},[e("span",null,"Setting up environment")])],-1),v={href:"https://www.rust-lang.org/tools/install",target:"_blank",rel:"noopener noreferrer"},b={href:"https://www.maturin.rs/installation",target:"_blank",rel:"noopener noreferrer"},y=l(`<div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code><span class="token operator">&gt;</span> python3 <span class="token parameter variable">-m</span> venv .venv
<span class="token operator">&gt;</span> <span class="token builtin class-name">source</span> .venv/bin/activate
<span class="token operator">&gt;</span> pip <span class="token function">install</span> <span class="token parameter variable">-U</span> pip maturin
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div><div class="line-number"></div><div class="line-number"></div></div></div><p>Then you need to build <code>PSQLPy</code> project.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>maturin develop
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><p>After this step project is built and installed in your python environment you created in previous step.</p><h2 id="linting-and-type-checking" tabindex="-1"><a class="header-anchor" href="#linting-and-type-checking"><span>Linting and type checking</span></a></h2><p>We have pre-commit configured with all our settings. We highly recommend you to install it as a git hook using pre-commit install command.</p><p>But even without installation, you can run all lints manually:</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pre-commit run <span class="token parameter variable">-a</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div><h2 id="testing" tabindex="-1"><a class="header-anchor" href="#testing"><span>Testing</span></a></h2><p>You need to have <code>PostgreSQL</code> server somewhere to run <code>pytest</code>.</p><p>Default credentials for testing <code>PostgreSQL</code> and you can configure it with env:</p><ul><li>host: <code>localhost</code> (env: POSTGRES_HOST)</li><li>user: <code>postgres</code> (env: POSTGRES_USER)</li><li>password: <code>postgres</code> (env: POSTGRES_PASSWORD)</li><li>port: <code>5432</code> (env: POSTGRES_PORT)</li><li>dbname: <code>psqlpy_test</code> (env: POSTGRES_DBNAME)</li></ul><p>You can run pytest and it will do the thing.</p><div class="language-bash line-numbers-mode" data-ext="sh" data-title="sh"><pre class="language-bash"><code>pytest <span class="token builtin class-name">.</span>
</code></pre><div class="line-numbers" aria-hidden="true"><div class="line-number"></div></div></div>`,14);function f(_,k){const n=o("ExternalLinkIcon");return i(),r("div",null,[d,p,u,e("p",null,[t("If you struggle with something or feel frustrated, you either create an issue, create a "),e("a",h,[t("discussions"),a(n)]),t(". page or publish a draft PR and ask your question in the description.")]),m,g,e("p",null,[t("Since it's rust-first project you need to install rust on your computer. The best way to do it is check "),e("a",v,[t("official site"),a(n)]),t(".")]),e("p",null,[t("After you install rust, you must prepare you python environment. One of the best ways is follow "),e("a",b,[t("maturin offical documentation"),a(n)]),t(" but below you can find all necessary commands.")]),y])}const S=s(c,[["render",f],["__file","contribute.html.vue"]]),T=JSON.parse('{"path":"/contribute.html","title":"Contribution guide","lang":"en-US","frontmatter":{"title":"Contribution guide","description":"We love contributions. This guide is for all fellas who want to make psqlpy better together. There are several rules for contributors: Please do not add malware. Please make sur...","head":[["meta",{"property":"og:url","content":"https://qaspen-python.github.io/contribute.html"}],["meta",{"property":"og:site_name","content":"PSQLPy"}],["meta",{"property":"og:title","content":"Contribution guide"}],["meta",{"property":"og:description","content":"We love contributions. This guide is for all fellas who want to make psqlpy better together. There are several rules for contributors: Please do not add malware. Please make sur..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"en-US"}],["meta",{"property":"og:updated_time","content":"2024-06-30T18:05:45.000Z"}],["meta",{"property":"article:modified_time","content":"2024-06-30T18:05:45.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"Contribution guide\\",\\"image\\":[\\"\\"],\\"dateModified\\":\\"2024-06-30T18:05:45.000Z\\",\\"author\\":[]}"]]},"headers":[{"level":2,"title":"Setting up environment","slug":"setting-up-environment","link":"#setting-up-environment","children":[]},{"level":2,"title":"Linting and type checking","slug":"linting-and-type-checking","link":"#linting-and-type-checking","children":[]},{"level":2,"title":"Testing","slug":"testing","link":"#testing","children":[]}],"git":{"createdTime":1719770745000,"updatedTime":1719770745000,"contributors":[{"name":"reqww","email":"my.gurbanov@gmail.com","commits":1}]},"filePathRelative":"contribute.md","localizedDate":"June 30, 2024","autoDesc":true,"excerpt":"<p>We love contributions. This guide is for all fellas who want to make psqlpy better together.</p>\\n<p>There are several rules for contributors:</p>\\n<ul>\\n<li>Please do not add malware.</li>\\n<li>Please make sure that your request solves the problem.</li>\\n</ul>\\n<p>If you struggle with something or feel frustrated, you either create an issue, create a <a href=\\"https://github.com/qaspen-python/psqlpy/discussions\\" target=\\"_blank\\" rel=\\"noopener noreferrer\\">discussions</a>. page or publish a draft PR and ask your question in the description.</p>"}');export{S as comp,T as data};
